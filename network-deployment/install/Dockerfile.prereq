###########################################################################
# (C) Copyright IBM Corporation 2015, 2016.                               #
#                                                                         #
# Licensed under the Apache License, Version 2.0 (the "License");         #
# you may not use this file except in compliance with the License.        #
# You may obtain a copy of the License at                                 #
#                                                                         #
#      http://www.apache.org/licenses/LICENSE-2.0                         #
#                                                                         #
# Unless required by applicable law or agreed to in writing, software     #
# distributed under the License is distributed on an "AS IS" BASIS,       #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.#
# See the License for the specific language governing permissions and     #
# limitations under the License.                                          #
###########################################################################

FROM ubuntu:16.04

# based on https://github.com/WASdev/ci.docker.websphere-traditional/
MAINTAINER thikade <thomas.hikade@gmail.com>

RUN apt-get update && apt-get install -y unzip wget net-tools sudo

ARG user=was

ARG group=was

RUN groupadd $group && useradd $user -g $group -m\
    && chown -R $user:$group /var /opt /tmp

USER $user

ARG URL

ENV IM          agent.installer.linux.gtk.x86_64_1.8.5001.20161016_1705.zip
ENV WAS_FP_PRE  8.5.5-WS-WAS-FP0000010
ENV WAS_SDK     7.1.3.40-WS-IBMWASJAVA-Linux.zip

###################### BUILD INSTRUCTIONS ##########################
#
# 1) maybe recreate virtualbox image to reduce VBOX file size:
#  > dm rm large8 && dm create --driver virtualbox  --virtualbox-cpu-count 2 --virtualbox-memory "8192" large8
# 2) Create/Mount virtualbox Shared Folder /WASINSTALL:<PATH WHEREVER YOUR WAS BINARIES ARE>
# 3) start lighttp docker container to server from /WASINSTALL mount
#     > docker run -ti --name httpd  -p 8080:80 -v /WASINSTALL:/var/www/localhost/htdocs  sebp/lighttpd
#
# 4) docker build --build-arg user=wasadmin --build-arg group=wasadmin --build-arg URL=http://192.168.99.100:8080 -t wasnd.prereq -f Dockerfile.prereq .
# now, create the tar archive of WAS installation in $pwd
# 5) docker run --rm -v $(pwd):/tmp wasnd.prereq


###################### IBM Installation Manager ##########################

# Install IBM Installation Manager
RUN wget -q $URL/$IM -O /tmp/IM.zip \
    && mkdir /tmp/im && unzip -qd /tmp/im /tmp/IM.zip \
    && /tmp/im/installc -acceptLicense -accessRights nonAdmin \
      -installationDirectory "/opt/IBM/InstallationManager"  \
      -dataLocation "/var/ibm/InstallationManager" -showProgress \
    && rm -fr /tmp/IM.zip /tmp/im

################# IBM WebSphere Application Server ######################

# Install IBM WebSphere Application Server ND v855
RUN wget -q $URL/WAS_ND_v8.5.5_1_of_3.zip -O /tmp/was1.zip && echo "download part1 ok." \
    && wget -q $URL/WAS_ND_v8.5.5_2_of_3.zip -O /tmp/was2.zip && echo "download part2 ok." \
    && wget -q $URL/WAS_ND_v8.5.5_3_of_3.zip -O /tmp/was3.zip && echo "download part3 ok." \
    && mkdir /tmp/was && unzip  -qd /tmp/was /tmp/was1.zip && echo "unzip 1 ok." \
    && unzip -qd /tmp/was /tmp/was2.zip && echo "unzip 2 ok." \
    && unzip -qd /tmp/was /tmp/was3.zip && echo "unzip 3 ok." \
    && echo "Starting IM installation" \
    && /opt/IBM/InstallationManager/eclipse/tools/imcl -showProgress \
      -acceptLicense  install com.ibm.websphere.ND.v85 \
      -repositories /tmp/was/repository.config  \
      -installationDirectory /opt/IBM/WebSphere/AppServer \
      -preferences com.ibm.cic.common.core.preferences.preserveDownloadedArtifacts=false \
    && rm -fr /tmp/was /tmp/was1.zip /tmp/was2.zip /tmp/was3.zip

###### IBM WebSphere Application Server Network Deployment Fixpack #######

# Install IBM WebSphere Application Server ND Fixpack v855x
RUN wget -q $URL/${WAS_FP_PRE}-part1.zip -O /tmp/wasfp1.zip && echo "download FP part1 ok." \
    && wget -q $URL/${WAS_FP_PRE}-part2.zip -O /tmp/wasfp2.zip && echo "download FP part2 ok." \
    && mkdir /tmp/wasfp \
    && unzip -qd /tmp/wasfp /tmp/wasfp1.zip  && echo "unzip FP part1 ok." \
    && unzip -qd /tmp/wasfp /tmp/wasfp2.zip  && echo "unzip FP part2 ok." \
    && /opt/IBM/InstallationManager/eclipse/tools/imcl -showProgress \
      -acceptLicense install com.ibm.websphere.ND.v85 \
      -repositories /tmp/wasfp/repository.config  \
      -installationDirectory /opt/IBM/WebSphere/AppServer \
      -preferences com.ibm.cic.common.core.preferences.preserveDownloadedArtifacts=false \
    && rm -fr /tmp/wasfp /tmp/wasfp1.zip /tmp/wasfp2.zip

########################### Install Java SDK 7.1 ########################

# Install Java SDK 7.1
RUN wget -q $URL/${WAS_SDK} -O /tmp/java1.zip \
    && mkdir /tmp/java \
    && unzip -qd /tmp/java /tmp/java1.zip  && echo "unzip SDK part1 ok." \
    && /opt/IBM/InstallationManager/eclipse/tools/imcl -showProgress \
      -acceptLicense install com.ibm.websphere.IBMJAVA.v71 \
      -repositories /tmp/java/repository.config \
      -installationDirectory /opt/IBM/WebSphere/AppServer \
      -preferences com.ibm.cic.common.core.preferences.preserveDownloadedArtifacts=false \
    && rm -fr /tmp/java /tmp/java*.zip 

CMD ["tar","cvf","/tmp/was.tar","/opt/IBM/WebSphere/AppServer"]
